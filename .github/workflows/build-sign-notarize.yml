name: build-sign-notarize

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: teaxyz/setup@v0

      - uses: teaxyz/brewkit/actions/setup-codesign@v0
        with:
          p12-file-base64: ${{ secrets.GUI_APPLE_CERTIFICATE }}
          p12-password: ${{ secrets.GUI_APPLE_CERTIFICATE_PASSWORD }}

      - name: get gui version
        id: gui-version
        run: |
          version=$(cat modules/desktop/package.json | tea jq --raw-output .version)
          if [ "${{ inputs.s3-prefix }}" != release ]; then
            version="$version-dev"
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - run: xc setup

      - name: build
        working-directory: modules/desktop
        run: |
          node scripts/predist.cjs
          pnpm build
          npx -- electron-builder --arm64 --mac dir
        env:
          SYNC_I18N: 1
          PUBLIC_MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_PROJECT_TOKEN }}
          PUBLIC_VERSION: ${{ steps.gui-version.outputs.version }}
          USE_HARD_LINKS: false
          CSC_FOR_PULL_REQUEST: false
          CSC_IDENTITY_AUTO_DISCOVERY: false
          PUSHY_APP_ID: ${{ secrets.PUSHY_APP_ID }}

      - run: mv modules/desktop/dist/mac*/tea.app .

      - name: bundle tea/cli
        run: |
          mkdir tea.app/Contents/Resources/cli
          cp ~/.tea/tea.xyz/v*/bin/tea tea.app/Contents/Resources/cli

      # signing everything separately because otherwise it doesnâ€™t work
      - name: codesign
        run: |
          codesign --verbose --sign "$id" "tea.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Helpers/chrome_crashpad_handler"
          codesign --verbose --sign "$id" "tea.app/Contents/Frameworks/Electron Framework.framework/Versions/A"
          codesign --verbose --sign "$id" "tea.app/Contents/Frameworks/Mantle.framework/Versions/A"
          codesign --verbose --sign "$id" "tea.app/Contents/Frameworks/ReactiveObjC.framework/Versions/A"
          codesign --verbose --sign "$id" "tea.app/Contents/Frameworks/Squirrel.framework/Versions/A"
          codesign --verbose --sign "$id" "tea.app/Contents/Frameworks/tea Helper.app"
          codesign --verbose --sign "$id" "tea.app/Contents/Frameworks/tea Helper (GPU).app"
          codesign --verbose --sign "$id" "tea.app/Contents/Frameworks/tea Helper (Plugin).app"
          codesign --verbose --sign "$id" "tea.app/Contents/Frameworks/tea Helper (Renderer).app"
          codesign --verbose --sign "$id" "tea.app"
        env:
          id: ${{ secrets.APPLE_IDENTITY_NO_PREFIX}}

      - name: dmg
        run: |
          mkdir foo
          mv tea.app foo

          tea create-dmg \
            --volname "tea" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "tea.app" 200 190 \
            --volicon modules/desktop/electron/icon.icns \
            --hide-extension "tea.app" \
            --app-drop-link 600 185 \
            --sandbox-safe \
            tea.dmg \
            foo

          xcrun codesign --force --sign "${{ secrets.APPLE_IDENTITY_NO_PREFIX}}" tea.dmg

      - run: codesign --verify --deep --display --verbose=4 tea.app
      - run: codesign --verify --deep --display --verbose=4 tea.dmg

      - name: notarize
        run: |
          xcrun notarytool \
            submit tea.dmg \
            --apple-id "${{ secrets.APPLE_ID }}" \
            --password "${{ secrets.APPLE_PASSWORD }}" \
            --team-id 7WV56FL599 \
            --wait

          xcrun stapler staple tea.dmg

      - run: spctl --ignore-cache --no-cache --assess --type execute --verbose=4 tea.app

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: tea.zip
          if-no-files-found: error
